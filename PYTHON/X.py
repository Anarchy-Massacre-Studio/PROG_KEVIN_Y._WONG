# -*- coding: utf-8 -*-
print("请在此选择需要求解何方程\n1.一元一次方程\n2.一元二次方程")
nani = input('')
#nani = '3'#
if nani == '1':
	print('请输入需要求解方程的各项系数（Rn表示开n次方，开头正号不省略，书写如下）\nax+R2(b)+c=d\n')
	a = input('未知数项系数:')
	b = input('常数项:')
	B = '';n=0;x=[''];y=['0'];Xx=0;Yx=0;Zx=0;xb=[''];yb=['0']
	C = ['~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~']
	D = ['~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~']
	O = {'~':'~','+':'1','-':'1','*':'1','/':'1','^':'2','R':'2','!':'2','0':'0','1':'0','2':'0','3':'0','4':'0','5':'0','6':'0','7':'0','8':'0','9':'0','a':'3','b':'3','c':'3','d':'3','e':'3','f':'3','g':'3','h':'3','i':'3','j':'3','k':'3','l':'3','m':'3','n':'3','o':'3','p':'3','q':'3','r':'3','s':'3','t':'3','u':'3','v':'3','w':'3','x':'3','y':'3','z':'3','A':'3','B':'3','C':'3','D':'3','E':'3','F':'3','G':'3','H':'3','I':'3','J':'3','K':'3','L':'3','M':'3','N':'3','O':'3','P':'3','Q':'3','Z':'3','S':'3','T':'3','U':'3','V':'3','W':'3','X':'3','Y':'3'}
	print('解:\n'+'('+a+')x+'+'('+b+')=0')
	print('('+a+')x='+'-('+b+')')
	b = '+'+b
	for i in b:
		if i == '-':
			i = '+'
		elif i == '+':
			i = '-'
		B = B + i 
	if B[:1] == '+':
		b = B[1:]
	else: b = B
	print('('+a+')x='+b)
	print('x=('+b+')/('+a+')')
	for i in a:
		C[n] = i
		n = n + 1
	n = 0
	for i in C:
		if n < 35:
			if O[C[n]] !='~':
				if O[C[n]]=='1' and y==['']:
					x.pop(0)
				elif O[C[n]]=='1':
					x.append(C[n])
					Xx=Xx+1
				if O[C[n]]=='0' and O[C[n-1]] == '1':
					y.append(int(C[n]))
					Yx=Yx+1
				elif O[C[n]]=='0' and O[C[n-1]] == '0':
					y[Yx]=int(y[Yx])*10+int(C[n])
			n = n +1
	n = 0;Xx=0;Yx=0
	for i in b:
		D[n] = i
		n = n + 1
	n = 0
	for i in D:
		if n < 35:
			if O[D[n]] !='~':
				if O[D[n]]=='1' and y==['']:
					xb.pop(0)
				elif O[D[n]]=='1':
					xb.append(D[n])
					Xx=Xx+1
				if O[D[n]]=='0' and O[D[n-1]] == '1':
					yb.append(int(D[n]))
					Yx=Yx+1
				elif O[D[n]]=='0' and O[D[n-1]] == '0':
					yb[Yx]=int(yb[Yx])*10+int(D[n])
			n = n +1
	x.pop(0);y.pop(0);xb.pop(0);yb.pop(0)
	print(x,y,xb,yb)
if nani == '3':
	a = float(input('X plz(sin)'))
	PI = 3.14
	print(0.832*((4/PI)*a-(4/(PI*PI))*a*a)+0.168*((4/PI)*a-(4/(PI*PI))*a*a)*((4/PI)*a-(4/(PI*PI))*a*a))
	a = input('ll')